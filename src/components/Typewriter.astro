---
interface Props {
    content: string;
    other?: string[];
}

const { content, other } = Astro.props;
---

<span class="typewriter font-mono border-r-2 border-r-white"></span>

<style>
    .typewriter {
        text-shadow: 0 0 10px #fff;
        animation: blink 1.5s steps(1) infinite;
    }

    @keyframes blink {
        0% {
            border-color: transparent;
        }

        50% {
            border-color: white;
        }

        100% {
            border-color: transparent;
        }
    }
</style>

<script define:vars={{ content, other }}>
    let typewriterRunning = false;
    let currentTimeout = null;

    function startTypewriter() {
        const element = document.querySelector('.typewriter');
        if (!element || typewriterRunning) return;
        
        if (currentTimeout) {
            clearTimeout(currentTimeout);
        }
        
        element.textContent = '';
        
        const otherCopy = other ? [...other] : [];
        
        typewriterRunning = true;
        
        const typewriter = (text = '', i = 0) => {
            if (i < text.length) {
                element.textContent += text[i++];
                currentTimeout = setTimeout(() => typewriter(text, i), 100);
            } else if (otherCopy.length > 0) {
                currentTimeout = setTimeout(() => {
                    element.textContent = '';
                    typewriter(otherCopy.shift());
                }, 5000);
            } else {
                typewriterRunning = false;
            }
        };
        
        typewriter(content);
    }

    if (document.readyState === 'loading') {
        document.addEventListener('DOMContentLoaded', startTypewriter);
    } else {
        startTypewriter();
    }

    document.addEventListener('astro:page-load', () => {
        typewriterRunning = false;
        startTypewriter();
    });
</script>
